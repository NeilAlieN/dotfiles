##################################
#           Animations           #
##################################
# requires https://github.com/jonaburg/picom
# (These are also the default values)
transition-length = 200
transition-pow-x = 0.1
transition-pow-y = 0.1
transition-pow-w = 0.1
transition-pow-h = 0.1
size-transition = true

#################################
#             Corners           #
#################################
# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom
corner-radius = 4;
rounded-corners-exclude = [
#"window_type = 'normal'",
  "class_g = 'Dunst'",
  "class_g = 'awesome'",
#  "class_g = 'URxvt'",
  "class_g = 'Emacs'",
  "class_g = 'XTerm'",
#  "class_g = 'kitty'",
  "class_g = 'Alacritty'",
  "class_g = 'Polybar'",
  "class_g = 'code-oss'",
  "class_g = 'Code'",
  "class_g = 'Fcitx5'",
  "class_g = 'Wpp'",
  "class_g = 'Wps'",
  "class_g = 'Nightly'",
  "class_g = 'TelegramDesktop'",
  "class_g = 'firefox'",
  "class_g = 'Google-chrome'",
  "class_g = 'Thunderbird'",
  "class_g = 'dwm'",
#  "class_g = 'Rofi'",
  "class_g = 'Microsoft-edge-dev'",
  ];
round-borders = 8;

#################################
#             Shadows           #
#################################


# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
# shadow = false
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
#shadow-radius = 30; 
# shadow-radius = 7;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = .75

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -7
#shadow-offset-x = -30;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -7
#shadow-offset-y = -30;

# Avoid drawing shadows on dock/panel windows. This option is deprecated,
# you should use the *wintypes* option in your config file instead.
#
# no-dock-shadow = false

# Don't draw shadows on drag-and-drop windows. This option is deprecated,
# you should use the *wintypes* option in your config file instead.
#
# no-dnd-shadow = false

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0.4 

# Green color value of shadow (0.0 - 1.0, defaults to 0).
#shadow-green = 0.8

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
#shadow-blue = 0.8

# Do not paint shadows on shaped windows. Note shaped windows
# here means windows setting its shape through X Shape extension.
# Those using ARGB background is beyond our control.
# Deprecated, use
#   shadow-exclude = 'bounding_shaped'
# or
#   shadow-exclude = 'bounding_shaped && !rounded_corners'
# instead.
#
# shadow-ignore-shaped = ''

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g ='Polybar'",
  "class_g = 'Conky'",
  "class_g = 'Rofi'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'",
  #"_GTK_FRAME_EXTENTS@:c",
  "class_g = 'firefox'",
  "class_g = 'Navigator'",
  "name ?= 'Mozilla Firefox'",
  "name ?= 'Chromium-browser'",
  "name ?= 'chromium-browser'",
  "class_g ?= 'Chromium-browser'",
  "class_g ?= 'chromium-browser'",
  "class_g = 'Thunderbird'",
  "name ?= 'New Tab - Chromium'",
  "class_g = 'xdg-desktop-portal-gnome' && window_type = 'menu'",
  "name = 'kitty-dropdown'",
  "class_g = 'mpv'",
  "class_g = 'Vinagre'",
  "name = 'kitty-gravestone'",
  "name = 'kitty-dropdown'",
  "name = 'XOSD'",
  "class_g = 'tor-browser'",
  "class_g = 'qutebrowser'",
  "name = 'qutebrowser'",
  "class_g = 'setup.tmp'",

  #"override_redirect = true",
];

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = ""

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false


#################################
#           Fading              #
#################################


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
#fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
fade-in-step = 0.100;
# fade-in-step = 0.05;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
fade-out-step = 0.10;
# fade-out-step = 0.05;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# don't need this, we disable fading for all normal windows with wintypes: {}
fade-exclude = [
  "class_g = 'slop'"   # maim
]

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################


opacity = 1.0;
# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
#inactive-opacity = 1.0
#inactive-opacity = 0.8;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
frame-opacity = 1.0
# frame-opacity = 0.7;

# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
# menu-opacity = 1.0
# menu-opacity is depreciated use dropdown-menu and popup-menu instead.

#If using these 2 below change their values in line 510 & 511 aswell
popup_menu = { opacity = 1.0; }
dropdown_menu = { opacity = 1.0; }


# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1.0;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'",                    # maim
  "class_g = 'Fcitx5'",
];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# opacity-rule = []
opacity-rule = [
  "100:class_g    = 'slop'",            # maim
  "100:class_g    = 'XTerm'",
  "100:class_g    = 'URxvt'",
  "100:class_g    = 'Fcitx5'",
#  "100:class_g    = 'kitty'",
  "100:class_g    = 'st-256color'",
  "100:class_g    = 'Zathura'",
  "90:class_g     = 'Alacritty'",
  "80:class_g     = 'Rofi'",
  "100:class_g     = 'Emacs'",
  "100:class_g    = 'code-oss'",
  "100:class_g    = 'Meld'",
  "100:class_g     = 'TelegramDesktop'",
  "100:class_g     = 'Joplin'",
  "100:class_g    = 'firefox'",
  "100:class_g    = 'Thunderbird'",
  "100:class_g     = 'i3bar'",
  "90:class_g     = 'Polybar'",
  "100:class_g    = 'krita'"

];


#################################
#     Background-Blurring       #
#################################


# Parameters for background blurring, see the *BLUR* section for more information.
# blur-method =
# blur-size = 12
#
# blur-deviation = false

# Blur background of semi-transparent / ARGB windows.
# Bad in performance, with driver-dependent behavior.
# The name of the switch may change without prior notifications.
#
# blur-background = true;

# Blur background of windows when the window frame is not opaque.
# Implies:
#    blur-background
# Bad in performance, with driver-dependent behavior. The name may change.
#
# blur-background-frame = false;


# Use fixed blur strength rather than adjusting according to window opacity.
# blur-background-fixed = false;


# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ''
# blur-kern = "3x3box";

blur: {
# requires: https://github.com/ibhagwan/picom
        method = "dual_kawase";
#method = "kernel";
        strength = 4;
        background = false;
        background-frame = false;
        background-fixed = false;
        #kern = "3x3box";
      }

# Exclude conditions for background blur.
blur-background-exclude = [
"window_type = 'dock'",
"window_type = 'desktop'",
"window_type = 'menu'",
#"class_g = 'krita'",
#"class_g = 'URxvt'",
#
# prevents picom from blurring the background
# when taking selection screenshot with `main`
# https://github.com/naelstrof/maim/issues/130
  "window_type = 'dock'",
  "class_g = 'Polybar'",
  "class_g = 'slop'",
  #"class_g = 'Rofi'",
  "class_g = 'Firefox'",
#  "class_g = 'kitty'",
  "class_g = 'dropdown'",
  "class_g = 'Gromit-mpx'",
  #"_GTK_FRAME_EXTENTS@:c"
];


#################################
#       General Settings        #
#################################

# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
# daemon = false

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
experimental-backends = true;
backend = "glx";
#backend = "xrender";
glx-no-rebind-pixmap = true;
glx-no-stencil = true;
#xrender-sync-fence = true
#no-use-damage = true
use-damage = false;

# Enable/disable VSync.
# vsync = false
vsync = true;

# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.
# dbus = false

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
#
# mark-wmwin-focused = false
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
# mark-ovredir-focused = false
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
#
detect-rounded-corners = false
# detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
#
detect-client-opacity = false
#detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will
# try detecting this with X RandR extension.
#
# refresh-rate = 60
# refresh-rate = 0

# Limit picom to repaint at most once every 1 / 'refresh_rate' second to
# boost performance. This should not be used with
#   vsync drm/opengl/opengl-oml
#
wintypes:
{
  menu = { shadow = false; blur-background = false; };
  dock = { shadow = false; clip-shadow-above = true; };
  dnd = { shadow = false; };
  tooltip = { shadow = false; };
#  menu        = { opacity = false; };
  dropdown_menu = { shadow = false; blur-background = false; opacity = false; };
  popup_menu    = { opacity = false; };
  utility       = { opacity = false; };
  normal        = { blur-background = true; };
  splash        = { blur-background = true; };

};
